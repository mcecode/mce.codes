---
import { moonId, sunId } from "@layout/body/mode-icon.ids.ts";
---

<svg width="56" height="56" viewBox="0 0 56 56" fill="none">
  <slot name="title" />
  <g id={moonId} class="moon">
    <path
      d="M3 28c0 13.8 11.2 25 25 25 13.64-.012 25-12 25-24-4 2-16 6-24-2S25 7 27 3C15 3 3 14.36 3 28z"
    ></path>
  </g>
  <g id={sunId} class="sun">
    <path
      d="M28 40.037A12.04 12.04 0 0 0 40.037 28 12.04 12.04 0 0 0 28 15.963 12.04 12.04 0 0 0 15.963 28 12.04 12.04 0 0 0 28 40.037z"
    ></path>
    <path
      d="M8.556 47.444l1.852-1.852m35.185 0l1.852 1.852m-1.852-37.037l1.852-1.852m-37.037 1.852L8.556 8.556M6.704 28H3m50 0h-3.704M28 49.296V53m0-50v3.704"
    ></path>
  </g>
</svg>

<style lang="scss">
  svg {
    width: v-size(8);
  }

  .moon {
    opacity: 1;
  }
  .sun {
    opacity: 0;
  }
  @include m-dark {
    .moon {
      opacity: 0;
    }
    .sun {
      opacity: 1;
    }
  }

  @include m-medium {
    svg {
      width: v-size(10);
    }
  }

  @include m-large {
    svg {
      width: v-size(11);
    }
  }

  .appear {
    animation: 250ms ease-in-out forwards rotate-appear;
  }
  .vanish {
    animation: 250ms ease-in-out reverse forwards rotate-appear;
  }
</style>

<script>
  import { moonId, sunId } from "@layout/body/mode-icon.ids.ts";
  // Imports below get removed by Prettier for some reason without a space or
  // comment here.
  import { modeChange } from "@lib/events.ts";

  const moon = document.getElementById(moonId) as unknown as SVGGElement;
  const sun = document.getElementById(sunId) as unknown as SVGGElement;

  function resetState(mode: string) {
    switch (mode) {
      case "light": {
        moon.style.opacity = "1";
        sun.style.opacity = "0";
        break;
      }
      case "dark": {
        moon.style.opacity = "0";
        sun.style.opacity = "1";
        break;
      }
    }

    moon.classList.remove("appear");
    moon.classList.remove("vanish");
    sun.classList.remove("appear");
    sun.classList.remove("vanish");
  }

  modeChange.addHandler((data, timesDispatched) => {
    // Sets correct icon state on page load without animation.
    if (timesDispatched === 0) {
      resetState(data);
      return;
    }

    switch (data) {
      case "light": {
        moon.classList.add("appear");
        sun.classList.add("vanish");
        break;
      }
      case "dark": {
        moon.classList.add("vanish");
        sun.classList.add("appear");
        break;
      }
    }
  });

  // Moon and sun animations end at the same time so put 'animationend' handling
  // on only one of them.
  moon.addEventListener("animationend", () => {
    resetState(modeChange.latestData ?? "");
  });
</script>
